# docker-compose.yml
services:
  app:
    build:
      context: .
      dockerfile: apps/mw/Dockerfile
    image: mastermobile-app:local
    command: >-
      uvicorn apps.mw.src.app:app --host 0.0.0.0 --port ${APP_PORT:-8000} --reload
    env_file:
      - .env.example
      - .env
    environment:
      B24_BASE_URL: ${B24_BASE_URL:-https://example.bitrix24.ru/rest}
      B24_WEBHOOK_USER_ID: ${B24_WEBHOOK_USER_ID:-1}
      B24_WEBHOOK_TOKEN: ${B24_WEBHOOK_TOKEN:-changeme}
      B24_RATE_LIMIT_RPS: ${B24_RATE_LIMIT_RPS:-2.0}
      B24_BACKOFF_SECONDS: ${B24_BACKOFF_SECONDS:-5}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL:-https://api.openai.com/v1}
      WHISPER_RATE_PER_MIN_USD: ${WHISPER_RATE_PER_MIN_USD:-0.006}
      STT_MAX_FILE_MINUTES: ${STT_MAX_FILE_MINUTES:-0}
      CHATGPT_PROXY_URL: ${CHATGPT_PROXY_URL:-http://proxy.example.com:8080}
      STORAGE_BACKEND: ${STORAGE_BACKEND:-local}
      S3_ENDPOINT_URL: ${S3_ENDPOINT_URL:-}
      S3_REGION: ${S3_REGION:-}
      S3_BUCKET: ${S3_BUCKET:-}
      S3_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID:-}
      S3_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY:-}
      LOCAL_STORAGE_DIR: ${LOCAL_STORAGE_DIR:-/app/storage}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    init: true
    ports:
      - "${APP_PORT:-8000}:8000"
    volumes:
      - .:/app
      - ./storage:${LOCAL_STORAGE_DIR:-/app/storage}
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:${APP_PORT:-8000}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_NAME:-mastermobile}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME:-mastermobile} -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  redis:
    image: redis:7-alpine
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "${REDIS_PORT:-6379}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

volumes:
  db-data:
