openapi: 3.0.3
info:
  title: MasterMobile API
  version: 1.0.0
servers:
  - url: https://api.mastermobile.app
    description: Production environment
  - url: https://staging.mastermobile.app
    description: Staging environment
  - url: http://localhost:8000
    description: Local development
tags:
  - name: system
    description: Service monitoring and diagnostic endpoints.
  - name: returns
    description: Endpoints for managing merchandise returns.
  - name: chatkit
    description: ChatKit widget integration endpoints.
  - name: b24-calls
    description: Bitrix24 call exports and registry endpoints.
  - name: walking-warehouse
    description: Walking Warehouse couriers and instant orders.
paths:
  /health:
    get:
      tags:
        - system
      summary: Health check
      operationId: getHealth
      responses:
        '200':
          description: Service is healthy.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/system/ping:
    get:
      tags:
        - system
      summary: Ping the middleware
      description: Returns the current status of the middleware together with a UTC timestamp.
      operationId: pingSystem
      security: []
      responses:
        '200':
          description: Service responded to ping.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ping'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '503':
          description: Service is unavailable.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/chatkit/session:
    post:
      tags:
        - chatkit
      summary: Create a ChatKit session for the widget
      description: Issues an ephemeral client secret that allows the ChatKit widget to connect to the configured workflow.
      operationId: createChatkitSession
      security: []
      parameters:
        - $ref: '#/components/parameters/XRequestId'
      responses:
        '200':
          description: Ephemeral client secret for the ChatKit widget.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatkitSession'
              examples:
                success:
                  summary: Session issued for the widget
                  value:
                    client_secret: '<string>'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '500':
          description: ChatKit session creation failed due to misconfiguration or upstream errors.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                sessionError:
                  summary: Underlying ChatKit session error
                  value:
                    type: about:blank
                    title: ChatKit session error
                    status: 500
                    detail: 'ChatKit session error: ...'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '502':
          description: Failed to create a ChatKit session via OpenAI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/chatkit/widget-action:
    post:
      tags:
        - chatkit
      summary: Accept actions emitted by the widget
      description: |
        Accepts ChatKit widget actions, records state for the middleware and forwards each
        supported action to the configured OpenAI Agent Builder workflow.

        Supports both modern payloads (`{"type":"tool","name":"search-docs"}`) and legacy
        payloads (`{"type":"tool.search-docs"}`).
      operationId: handleChatkitWidgetAction
      security: []
      parameters:
        - $ref: '#/components/parameters/XRequestId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatkitWidgetActionRequest'
            examples:
              modern:
                summary: Modern widget action with explicit tool name
                value:
                  type: tool
                  name: search-docs
                  payload:
                    thread_id: thread_123
                    query: 'Return policy for accessories'
              legacy:
                summary: Legacy widget action encoding the tool name in type
                value:
                  type: tool.search-docs
                  payload:
                    conversation_id: convo_456
                    query: 'Warranty terms for smartphones'
      responses:
        '200':
          description: Widget action acknowledgement. The `search-docs` tool keeps the widget in a pending state by returning `awaiting_query`.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatkitWidgetActionResponse'
              examples:
                searchDocs:
                  summary: search-docs tool requests a follow-up query
                  value:
                    ok: true
                    awaiting_query: true
                defaultTool:
                  summary: Generic acknowledgement for other tools
                  value:
                    ok: true
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '502':
          description: Failed to invoke the configured OpenAI workflow.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/returns:
    get:
      tags:
        - returns
      summary: List returns
      description: Returns a paginated list of return requests filtered by optional query parameters.
      operationId: listReturns
      security:
        - bearerAuth: []
      x-roles:
        - 1c
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/PageSize'
      responses:
        '200':
          description: A paginated collection of returns.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedReturns'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
    post:
      tags:
        - returns
      summary: Create a return request
      description: Registers a new return initiated by Bitrix24, the call center or warehouse operations.
      operationId: createReturn
      security:
        - bearerAuth: []
      x-roles:
        - courier
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnCreate'
      responses:
        '201':
          description: Return request was created.
          headers:
            Location:
              description: URL of the created return resource.
              schema:
                type: string
                format: uri
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '409':
          description: A return with the provided idempotency key already exists or payload differs from the original request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/returns/{return_id}:
    parameters:
      - $ref: '#/components/parameters/ReturnId'
    get:
      tags:
        - returns
      summary: Retrieve a return
      operationId: getReturn
      security:
        - bearerAuth: []
      x-roles:
        - 1c
        - courier
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
      responses:
        '200':
          description: Return details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '404':
          description: Return was not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
    put:
      tags:
        - returns
      summary: Update a return
      operationId: updateReturn
      security:
        - bearerAuth: []
      x-roles:
        - 1c
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnCreate'
      responses:
        '200':
          description: Updated return details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '404':
          description: Return was not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '409':
          description: Conflict caused by idempotency mismatch.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
    delete:
      tags:
        - returns
      summary: Delete a return
      operationId: deleteReturn
      security:
        - bearerAuth: []
      x-roles:
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      responses:
        '204':
          description: Return was deleted.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '404':
          description: Return was not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/b24-calls/export.csv:
    get:
      tags:
        - b24-calls
      summary: Download Bitrix24 call records as CSV
      description: Streams Bitrix24 call records filtered by optional parameters as a UTF-8 CSV file.
      operationId: exportB24CallsCsv
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - name: employee_id
          in: query
          required: false
          description: Filter by Bitrix24 employee identifier.
          schema:
            type: string
            maxLength: 128
        - name: date_from
          in: query
          required: false
          description: Start of the call start timestamp range (inclusive).
          schema:
            type: string
            format: date-time
        - name: date_to
          in: query
          required: false
          description: End of the call start timestamp range (inclusive).
          schema:
            type: string
            format: date-time
        - name: has_text
          in: query
          required: false
          description: When true, return only calls that have a transcript; false for calls without transcripts.
          schema:
            type: boolean
      responses:
        '200':
          description: Filtered Bitrix24 call records exported as CSV.
          content:
            text/csv:
              schema:
                type: string
                format: binary
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '400':
          description: Invalid date range supplied.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/ww/couriers:
    get:
      tags:
        - walking-warehouse
      summary: List Walking Warehouse couriers
      description: Returns couriers optionally filtered by a search query.
      operationId: listWalkingWarehouseCouriers
      security:
        - bearerAuth: []
      x-roles:
        - courier
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - name: q
          in: query
          required: false
          description: Case-insensitive search across courier id, name and phone.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Collection of couriers.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouriersResponse'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '401':
          description: Authentication required.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '403':
          description: Principal lacks sufficient privileges.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
    post:
      tags:
        - walking-warehouse
      summary: Register a Walking Warehouse courier
      description: Creates a courier record for Walking Warehouse assignments.
      operationId: createWalkingWarehouseCourier
      security:
        - bearerAuth: []
      x-roles:
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourierCreate'
      responses:
        '201':
          description: Courier created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Courier'
          headers:
            Location:
              description: URL of the created courier resource.
              schema:
                type: string
                format: uri
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '401':
          description: Authentication required.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '403':
          description: Principal lacks sufficient privileges.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '409':
          description: Courier already exists.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/ww/orders:
    get:
      tags:
        - walking-warehouse
      summary: List Walking Warehouse orders
      description: Returns instant orders optionally filtered by status and search query.
      operationId: listWalkingWarehouseOrders
      security:
        - bearerAuth: []
      x-roles:
        - courier
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - name: status
          in: query
          required: false
          description: Filter orders by status; multiple values allowed.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/WWOrderStatus'
          style: form
          explode: true
        - name: q
          in: query
          required: false
          description: Case-insensitive search across id, title and customer name.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Collection of orders.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderListResponse'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '401':
          description: Authentication required.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '403':
          description: Principal lacks sufficient privileges.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
    post:
      tags:
        - walking-warehouse
      summary: Create Walking Warehouse order
      description: Creates a new instant order in Walking Warehouse.
      operationId: createWalkingWarehouseOrder
      security:
        - bearerAuth: []
      x-roles:
        - courier
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      responses:
        '201':
          description: Order created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          headers:
            Location:
              description: URL of the created order resource.
              schema:
                type: string
                format: uri
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '401':
          description: Authentication required.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '403':
          description: Principal lacks sufficient privileges.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '404':
          description: Referenced courier was not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '409':
          description: Order already exists.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/ww/orders/{order_id}:
    parameters:
      - $ref: '#/components/parameters/OrderId'
    patch:
      tags:
        - walking-warehouse
      summary: Update Walking Warehouse order
      description: Applies partial updates to an existing instant order.
      operationId: updateWalkingWarehouseOrder
      security:
        - bearerAuth: []
      x-roles:
        - courier
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdate'
      responses:
        '200':
          description: Updated order representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '401':
          description: Authentication required.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '403':
          description: Principal lacks sufficient privileges.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '404':
          description: Order was not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/ww/orders/{order_id}/assign:
    parameters:
      - $ref: '#/components/parameters/OrderId'
    post:
      tags:
        - walking-warehouse
      summary: Assign courier to order
      description: Assigns or unassigns a courier for an instant order.
      operationId: assignWalkingWarehouseOrder
      security:
        - bearerAuth: []
      x-roles:
        - courier
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderAssign'
      responses:
        '200':
          description: Updated order representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '401':
          description: Authentication required.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '403':
          description: Principal lacks sufficient privileges.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '404':
          description: Order or courier was not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/ww/orders/{order_id}/status:
    parameters:
      - $ref: '#/components/parameters/OrderId'
    post:
      tags:
        - walking-warehouse
      summary: Update Walking Warehouse order status
      description: Transitions an instant order to a new status.
      operationId: updateWalkingWarehouseOrderStatus
      security:
        - bearerAuth: []
      x-roles:
        - courier
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderStatusUpdate'
      responses:
        '200':
          description: Updated order representation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '401':
          description: Authentication required.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '403':
          description: Principal lacks sufficient privileges.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '404':
          description: Order was not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/ww/report/deliveries:
    get:
      tags:
        - walking-warehouse
      summary: Walking Warehouse delivery report
      description: >-
        Returns Walking Warehouse deliveries filtered by optional parameters as a
        structured report. Set `format=csv` to receive a UTF-8 encoded CSV with a
        trailing totals row whose first column is `TOTALS` and whose
        `total_amount`/`duration_min` columns contain aggregated sums.
      operationId: getWalkingWarehouseDeliveryReport
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - name: status
          in: query
          required: false
          description: Filter by order status; multiple values allowed.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/WWOrderStatus'
        - name: courier_id
          in: query
          required: false
          description: Filter deliveries handled by a specific courier identifier.
          schema:
            type: string
            minLength: 1
            maxLength: 128
        - name: created_from
          in: query
          required: false
          description: Return deliveries created on or after the specified timestamp.
          schema:
            type: string
            format: date-time
        - name: created_to
          in: query
          required: false
          description: Return deliveries created on or before the specified timestamp.
          schema:
            type: string
            format: date-time
        - name: format
          in: query
          required: false
          description: Response format; defaults to JSON. Use `csv` for a UTF-8 CSV export.
          schema:
            type: string
            enum:
              - json
              - csv
            default: json
      responses:
        '200':
          description: Delivery report rendered in the requested format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryReportResponse'
            text/csv:
              schema:
                type: string
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '401':
          description: Authentication required.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '403':
          description: Principal lacks sufficient privileges.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error or invalid date range.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/ww/export/kmp4:
    get:
      tags:
        - walking-warehouse
      summary: Walking Warehouse KMP4 export
      description: Serializes deliveries into the payload consumed by the 1C KMP4 upload extension.
      operationId: exportWalkingWarehouseKMP4
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - name: status
          in: query
          required: false
          description: Filter by order status; multiple values allowed.
          schema:
            type: array
            items:
              $ref: '#/components/schemas/WWOrderStatus'
        - name: courier_id
          in: query
          required: false
          description: Filter deliveries handled by a specific courier identifier.
          schema:
            type: string
            minLength: 1
            maxLength: 128
        - name: created_from
          in: query
          required: false
          description: Return deliveries created on or after the specified timestamp.
          schema:
            type: string
            format: date-time
        - name: created_to
          in: query
          required: false
          description: Return deliveries created on or before the specified timestamp.
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Orders serialized for the KMP4 upload extension.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMP4ExportResponse'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '401':
          description: Authentication required.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '403':
          description: Principal lacks sufficient privileges.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error or invalid date range.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '500':
          description: Unexpected serialization error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
  /api/v1/b24-calls/export.json:
    get:
      tags:
        - b24-calls
      summary: List Bitrix24 call records as JSON
      description: Returns Bitrix24 call records filtered by optional parameters as a JSON array.
      operationId: exportB24CallsJson
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - name: employee_id
          in: query
          required: false
          description: Filter by Bitrix24 employee identifier.
          schema:
            type: string
            maxLength: 128
        - name: date_from
          in: query
          required: false
          description: Start of the call start timestamp range (inclusive).
          schema:
            type: string
            format: date-time
        - name: date_to
          in: query
          required: false
          description: End of the call start timestamp range (inclusive).
          schema:
            type: string
            format: date-time
        - name: has_text
          in: query
          required: false
          description: When true, return only calls that have a transcript; false for calls without transcripts.
          schema:
            type: boolean
      responses:
        '200':
          description: Filtered Bitrix24 call records.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/B24CallRecord'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '400':
          description: Invalid date range supplied.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
    put:
      tags:
        - returns
      summary: Update a return
      operationId: updateReturn
      security:
        - bearerAuth: []
      x-roles:
        - 1c
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnCreate'
      responses:
        '200':
          description: Updated return details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Return'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '404':
          description: Return was not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '409':
          description: Conflict caused by idempotency mismatch.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
    delete:
      tags:
        - returns
      summary: Delete a return
      operationId: deleteReturn
      security:
        - bearerAuth: []
      x-roles:
        - admin
      parameters:
        - $ref: '#/components/parameters/XRequestId'
        - $ref: '#/components/parameters/IdempotencyKey'
      responses:
        '204':
          description: Return was deleted.
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '422':
          description: Validation error.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
        '404':
          description: Return was not found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Error'
          headers:
            X-Request-Id:
              $ref: '#/components/headers/XRequestId'
components:
  schemas:
    Health:
      type: object
      required:
        - status
      properties:
        status:
          type: string
          description: Overall health status of the middleware.
          example: ok
        version:
          type: string
          description: Currently deployed API version.
          example: 1.0.0
        uptime_seconds:
          type: integer
          description: Uptime of the service in seconds.
          example: 86400
    Ping:
      type: object
      required:
        - status
        - timestamp
      properties:
        status:
          type: string
          description: Short status indicator.
          example: pong
        timestamp:
          type: string
          format: date-time
          description: UTC timestamp of the ping response.
          example: '2024-08-01T12:34:56Z'
        service:
          type: string
          description: Identifier of the service responding to the ping.
          example: master-mobile-middleware
    ChatkitSession:
      type: object
      required:
        - client_secret
      properties:
        client_secret:
          type: string
          description: Ephemeral client secret issued for the ChatKit widget.
          example: cs_live_a1b2c3d4e5f6
    ChatkitWidgetActionRequest:
      type: object
      description: |
        ChatKit widget actions support two payload formats.

        - **Modern format** — the `type` field contains a high-level category (for example, `tool`)
          and the `name` field specifies the tool identifier (for example, `search-docs`).
        - **Legacy format** — the `type` field encodes both values separated by a dot
          (for example, `tool.search-docs`).

        Both formats share the same payload envelope and are accepted by the middleware.
      required:
        - type
      properties:
        type:
          type: string
          description: Action category or legacy identifier produced by the ChatKit widget.
          example: tool
        name:
          type: string
          nullable: true
          description: Tool name associated with the action when the type is tool.
          example: search-docs
        payload:
          type: object
          description: Raw payload forwarded from the ChatKit widget.
          additionalProperties: {}
          example:
            thread_id: thread_123
    ChatkitWidgetActionResponse:
      type: object
      required:
        - ok
      properties:
        ok:
          type: boolean
          description: Indicates whether the middleware accepted the widget action.
          example: true
        awaiting_query:
          type: boolean
          nullable: true
          description: When true, the widget should prompt the user for a follow-up query.
          example: true
    B24CallRecord:
      type: object
      required:
        - run_id
        - call_id
        - duration_sec
        - status
        - retry_count
        - has_text
      properties:
        run_id:
          type: string
          format: uuid
          description: Identifier of the export run that produced the record.
          example: 8c9c2cb4-5a37-4b7d-8c29-6c5d9ec470b9
        call_id:
          type: string
          description: Bitrix24 call identifier.
          example: CALL-100
        record_id:
          type: string
          nullable: true
          description: Optional Bitrix24 record identifier when a call has multiple segments.
          example: REC-100
        employee:
          type: string
          nullable: true
          description: Identifier of the Bitrix24 employee associated with the call.
          example: EMP-900
        datetime_start:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the call started in Bitrix24.
          example: '2024-02-01T09:00:00Z'
        direction:
          type: string
          nullable: true
          description: Direction of the call (inbound, outbound or internal).
          example: inbound
        'from':
          type: string
          nullable: true
          description: Caller phone number.
          example: '+701000001'
        to:
          type: string
          nullable: true
          description: Callee phone number.
          example: '+701000002'
        duration_sec:
          type: integer
          description: Duration of the call in seconds.
          example: 240
        recording_url:
          type: string
          nullable: true
          description: Public URL of the call recording when available.
          example: https://example.com/records/100.mp3
        transcript_path:
          type: string
          nullable: true
          description: Storage path for the generated transcript.
          example: s3://bucket/call_100.txt
        summary_path:
          type: string
          nullable: true
          description: Storage path for the optional call summary.
          example: summary/call_100.md
        text_preview:
          type: string
          nullable: true
          description: First kilobyte of the transcript text for preview purposes.
          example: Клиент благодарит за консультацию
        transcription_cost:
          type: string
          nullable: true
          description: Total recognition cost for the call, formatted with two decimal places.
          example: '24.00'
        currency_code:
          type: string
          nullable: true
          description: ISO-4217 currency code of the recognition cost.
          example: RUB
        language:
          type: string
          nullable: true
          description: Language detected for the transcript.
          example: ru
        status:
          type: string
          description: Processing status of the call within the export run.
          example: completed
        error_code:
          type: string
          nullable: true
          description: Machine-readable error code when processing failed.
          example: missing_audio
        retry_count:
          type: integer
          description: Number of transcription retry attempts performed by the pipeline.
          example: 2
        checksum:
          type: string
          nullable: true
          description: Hex-encoded checksum of the stored audio/transcript pair for QA sampling.
          example: 4f5d6a7b8c9d10e1
        has_text:
          type: boolean
          description: Indicates whether the call has an associated transcript.
          example: true
    Error:
      type: object
      required:
        - type
        - title
        - status
      properties:
        type:
          type: string
          format: uri
          description: Link to a document describing the error type.
          example: https://api.mastermobile.app/errors/validation
        title:
          type: string
          description: Short human-readable summary of the error.
          example: Validation failed
        status:
          type: integer
          description: HTTP status code applicable to this problem.
          example: 400
        detail:
          type: string
          description: Human-readable explanation specific to this occurrence of the problem.
          example: Source must be one of widget, call_center, warehouse.
        errors:
          type: array
          description: List of field level validation errors.
          items:
            type: object
            properties:
              field:
                type: string
                description: Field path related to the error.
                example: items[0].sku
              message:
                type: string
                description: Description of the validation issue.
                example: SKU is required.
        request_id:
          type: string
          description: Identifier that correlates the error with logs and traces.
          example: 7b1c9945-70ab-4170-9c7e-4d6e9de5a0f9
    Return:
      type: object
      required:
        - id
        - status
        - source
        - courier_id
        - items
        - created_at
        - updated_at
      properties:
        id:
          type: string
          description: Unique identifier of the return.
          example: ret_501
        status:
          type: string
          description: Current status of the return.
          enum:
            - pending
            - accepted
            - rejected
            - cancelled
          example: pending
        source:
          type: string
          description: Channel that initiated the return.
          enum:
            - widget
            - call_center
            - warehouse
          example: widget
        courier_id:
          type: string
          description: Identifier of the courier handling the order.
          example: cour_123
        order_id_1c:
          type: string
          nullable: true
          description: Optional reference to the order in 1C.
          example: '000123'
        manager_id:
          type: string
          nullable: true
          description: Identifier of the manager who processed the return.
          example: mgr_42
        comment:
          type: string
          nullable: true
          description: Additional notes about the return.
        created_at:
          type: string
          format: date-time
          description: When the return was created.
          example: '2024-08-01T12:00:00Z'
        updated_at:
          type: string
          format: date-time
          description: When the return was last updated.
          example: '2024-08-01T13:45:00Z'
        items:
          type: array
          minItems: 1
          description: Items included in the return.
          items:
            type: object
            required:
              - line_id
              - sku
              - qty
              - quality
              - reason_code
            properties:
              line_id:
                type: string
                description: Identifier of the line item inside the return.
                example: line_1
              sku:
                type: string
                description: Stock keeping unit of the returned product.
                example: SKU-1001
              qty:
                type: integer
                minimum: 1
                description: Quantity being returned.
                example: 1
              quality:
                type: string
                description: Quality of the returned item.
                enum:
                  - new
                  - defect
                  - unknown
                example: defect
              reason_code:
                type: string
                description: Machine-readable reason code.
                example: damaged_package
              reason_note:
                type: string
                nullable: true
                description: Additional human-readable note for the reason.
              photos:
                type: array
                description: Bitrix24 file identifiers for related photos.
                items:
                  type: string
                  example: 9f3c2a44
              imei:
                type: string
                nullable: true
                description: IMEI of the returned device when applicable.
              serial:
                type: string
                nullable: true
                description: Serial number of the returned device.
    ReturnCreate:
      type: object
      required:
        - source
        - courier_id
        - items
      properties:
        source:
          type: string
          description: Channel that initiated the return.
          enum:
            - widget
            - call_center
            - warehouse
          example: widget
        courier_id:
          type: string
          description: Identifier of the courier who collected the items from the customer.
          example: cour_123
        order_id_1c:
          type: string
          nullable: true
          description: Optional reference to the original order in 1C.
          example: '000123'
        comment:
          type: string
          nullable: true
          description: Additional notes for operators.
        items:
          type: array
          minItems: 1
          description: Items being returned.
          items:
            type: object
            required:
              - sku
              - qty
              - quality
              - reason_code
            properties:
              sku:
                type: string
                description: Stock keeping unit of the returned product.
                example: SKU-1001
              qty:
                type: integer
                minimum: 1
                description: Quantity being returned.
                example: 1
              quality:
                type: string
                description: Quality of the returned item.
                enum:
                  - new
                  - defect
                  - unknown
                example: defect
              reason_code:
                type: string
                description: Machine-readable reason code.
                example: damaged_package
              reason_note:
                type: string
                nullable: true
                description: Additional human-readable note for the reason.
              photos:
                type: array
                description: Bitrix24 file identifiers for related photos.
                items:
                  type: string
                  example: 9f3c2a44
              imei:
                type: string
                nullable: true
                description: IMEI of the returned device when applicable.
              serial:
                type: string
                nullable: true
                description: Serial number of the returned device.
    PaginatedReturns:
      type: object
      required:
        - items
        - page
        - page_size
        - total_items
        - total_pages
      properties:
        items:
          type: array
          description: Page of returns.
          items:
            $ref: '#/components/schemas/Return'
        page:
          type: integer
          minimum: 1
          description: Current page number.
          example: 1
        page_size:
          type: integer
          minimum: 1
          description: Number of items per page.
          example: 20
        total_items:
          type: integer
          minimum: 0
          description: Total number of returns available.
          example: 125
        total_pages:
          type: integer
          minimum: 0
          description: Total number of pages available.
          example: 7
        has_next:
          type: boolean
          description: Indicates if there is another page after the current one.
          example: true
    Courier:
      type: object
      required:
        - id
        - display_name
        - is_active
        - created_at
        - updated_at
      properties:
        id:
          type: string
          description: Unique identifier of the courier.
          example: courier-101
        display_name:
          type: string
          description: Human readable name of the courier.
          example: John Doe
        phone:
          type: string
          nullable: true
          description: Contact phone number for the courier.
          example: '+79001002030'
        is_active:
          type: boolean
          description: Whether the courier is active and available for assignments.
          example: true
        created_at:
          type: string
          format: date-time
          description: Timestamp when the courier was registered.
          example: '2024-09-01T12:00:00Z'
        updated_at:
          type: string
          format: date-time
          description: Timestamp of the last courier update.
          example: '2024-09-01T12:05:00Z'
    CourierCreate:
      type: object
      required:
        - id
        - display_name
      properties:
        id:
          type: string
          description: Unique identifier of the courier.
          example: courier-101
        display_name:
          type: string
          description: Human readable name of the courier.
          example: John Doe
        phone:
          type: string
          nullable: true
          description: Contact phone number for the courier.
        is_active:
          type: boolean
          description: Whether the courier is active and available for assignments.
          default: true
    CouriersResponse:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          description: List of couriers matching the filters.
          items:
            $ref: '#/components/schemas/Courier'
    WWOrderStatus:
      type: string
      description: Status values for Walking Warehouse instant orders.
      enum:
        - NEW
        - ASSIGNED
        - IN_TRANSIT
        - DONE
        - REJECTED
        - DECLINED
      example: ASSIGNED
    OrderItem:
      type: object
      required:
        - sku
        - name
        - qty
        - price
      properties:
        sku:
          type: string
          description: Stock keeping unit of the product.
          example: SKU-100
        name:
          type: string
          description: Human readable product name.
          example: Coffee
        qty:
          type: integer
          minimum: 0
          description: Quantity to be delivered.
          example: 2
        price:
          type: string
          description: Unit price in the order currency with two decimal places.
          example: '250.00'
    OrderCreateItem:
      allOf:
        - $ref: '#/components/schemas/OrderItem'
    Order:
      type: object
      required:
        - id
        - title
        - customer_name
        - status
        - currency_code
        - total_amount
        - created_at
        - updated_at
        - items
      properties:
        id:
          type: string
          description: Unique identifier of the order.
          example: order-123
        title:
          type: string
          description: Title of the order shown to the courier.
          example: Grocery delivery
        customer_name:
          type: string
          description: Customer name associated with the order.
          example: Alice Smith
        status:
          $ref: '#/components/schemas/WWOrderStatus'
        courier_id:
          type: string
          nullable: true
          description: Identifier of the courier assigned to the order.
          example: courier-101
        currency_code:
          type: string
          minLength: 3
          maxLength: 3
          description: ISO-4217 currency code of the order totals.
          example: RUB
        total_amount:
          type: string
          description: Total amount including taxes and delivery with two decimal places.
          example: '990.50'
        notes:
          type: string
          nullable: true
          description: Optional notes displayed to the courier.
        created_at:
          type: string
          format: date-time
          description: Timestamp when the order was created.
          example: '2024-09-01T13:00:00Z'
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the order was last updated.
          example: '2024-09-01T13:05:00Z'
        items:
          type: array
          minItems: 1
          description: Order lines for the courier to deliver.
          items:
            $ref: '#/components/schemas/OrderItem'
    OrderCreate:
      type: object
      required:
        - title
        - customer_name
        - items
        - total_amount
      properties:
        id:
          type: string
          nullable: true
          description: Optional identifier; generated when omitted.
          example: order-123
        title:
          type: string
          description: Title of the order shown to the courier.
          example: Grocery delivery
        customer_name:
          type: string
          description: Customer name associated with the order.
        status:
          $ref: '#/components/schemas/WWOrderStatus'
          description: Initial status of the order.
          default: DRAFT
        courier_id:
          type: string
          nullable: true
          description: Identifier of the courier assigned to the order.
        currency_code:
          type: string
          minLength: 3
          maxLength: 3
          description: ISO-4217 currency code of the order totals.
          default: RUB
        total_amount:
          type: string
          description: Total amount including taxes and delivery with two decimal places.
          example: '990.50'
        notes:
          type: string
          nullable: true
          description: Optional notes displayed to the courier.
        items:
          type: array
          minItems: 1
          description: Order lines for the courier to deliver.
          items:
            $ref: '#/components/schemas/OrderCreateItem'
    OrderUpdate:
      type: object
      properties:
        title:
          type: string
          description: Updated title of the order.
        customer_name:
          type: string
          description: Updated customer name.
        notes:
          type: string
          nullable: true
          description: Updated notes for the courier.
        currency_code:
          type: string
          minLength: 3
          maxLength: 3
          description: Updated currency code.
        total_amount:
          type: string
          description: Updated order total with two decimal places.
        items:
          type: array
          description: Replacement set of order lines.
          items:
            $ref: '#/components/schemas/OrderCreateItem'
    OrderAssign:
      type: object
      properties:
        courier_id:
          type: string
          nullable: true
          description: Identifier of the courier or null to unassign.
        decline:
          type: boolean
          description: Set to true when the courier declines the assignment.
    OrderStatusUpdate:
      type: object
      required:
        - status
      properties:
        status:
          $ref: '#/components/schemas/WWOrderStatus'
          description: New status for the order.
    DeliveryReportRow:
      type: object
      required:
        - order_id
        - status
        - title
        - customer_name
        - total_amount
        - currency_code
        - created_at
        - updated_at
        - duration_min
      properties:
        order_id:
          type: string
          description: Identifier of the Walking Warehouse order.
        courier_id:
          type: string
          nullable: true
          description: Identifier of the courier assigned to the order.
        courier_name:
          type: string
          nullable: true
          description: Display name of the courier assigned to the order.
        status:
          type: string
          description: Current order status in Walking Warehouse.
        title:
          type: string
          description: Title of the delivery visible to the courier.
        customer_name:
          type: string
          description: Customer associated with the delivery.
        total_amount:
          type: string
          description: Total amount of the order in its currency.
        currency_code:
          type: string
          minLength: 3
          maxLength: 3
          description: ISO-4217 currency code of the order amount.
        created_at:
          type: string
          format: date-time
          description: Timestamp when the order was created in Walking Warehouse.
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the order last changed status.
        duration_min:
          type: number
          format: float
          minimum: 0
          description: Elapsed minutes between creation and last update.
    DeliveryReportTotals:
      type: object
      required:
        - total_orders
        - total_amount
        - total_duration_min
      properties:
        total_orders:
          type: integer
          minimum: 0
          description: Number of deliveries in the report.
        total_amount:
          type: string
          description: Sum of order totals across all deliveries.
        total_duration_min:
          type: number
          format: float
          minimum: 0
          description: Sum of delivery durations in minutes across the report.
    DeliveryReportResponse:
      type: object
      required:
        - items
        - totals
      properties:
        items:
          type: array
          description: Delivery records matching the requested filters.
          items:
            $ref: '#/components/schemas/DeliveryReportRow'
        totals:
          $ref: '#/components/schemas/DeliveryReportTotals'
          description: Aggregated totals for convenience in UI/export consumers.
    KMP4OrderItem:
      type: object
      required:
        - sku
        - name
        - qty
        - price
      properties:
        sku:
          type: string
          description: Stock keeping unit used in Walking Warehouse.
        name:
          type: string
          description: Item name displayed to the courier.
        qty:
          type: integer
          minimum: 0
          description: Quantity of the item to deliver.
        price:
          type: string
          description: Unit price encoded as a decimal string.
    KMP4Order:
      type: object
      required:
        - order_id
        - title
        - customer_name
        - status_code
        - total_amount
        - currency_code
        - created_at
        - updated_at
        - items
      properties:
        order_id:
          type: string
          description: Identifier of the order exported to KMP4.
        title:
          type: string
          description: Order title as displayed in the UI.
        customer_name:
          type: string
          description: Customer associated with the order.
        status_code:
          type: string
          description: Status code mapped to the KMP4 domain.
        total_amount:
          type: string
          description: Total amount of the order in its currency.
        currency_code:
          type: string
          minLength: 3
          maxLength: 3
          description: ISO-4217 currency code of the order amount.
        courier_id:
          type: string
          nullable: true
          description: Identifier of the courier assigned to the order.
        notes:
          type: string
          nullable: true
          description: Optional notes for the courier exported to KMP4.
        created_at:
          type: string
          format: date-time
          description: Timestamp when the order was created in Walking Warehouse.
        updated_at:
          type: string
          format: date-time
          description: Timestamp of the latest order change exported to KMP4.
        items:
          type: array
          description: Order lines included in the export payload.
          items:
            $ref: '#/components/schemas/KMP4OrderItem'
    KMP4ExportResponse:
      type: object
      required:
        - items
        - total
      properties:
        items:
          type: array
          description: Orders ready to be consumed by the KMP4 extension.
          items:
            $ref: '#/components/schemas/KMP4Order'
        total:
          type: integer
          minimum: 0
          description: Number of orders in the export payload.
    OrderListResponse:
      type: object
      required:
        - items
        - total
      properties:
        items:
          type: array
          description: Orders matching requested filters.
          items:
            $ref: '#/components/schemas/Order'
        total:
          type: integer
          minimum: 0
          description: Total number of orders after filters.
          example: 5
  parameters:
    XRequestId:
      name: X-Request-Id
      in: header
      required: false
      description: Correlates logs across services. When omitted, the server generates a value.
      schema:
        type: string
        maxLength: 128
    IdempotencyKey:
      name: Idempotency-Key
      in: header
      required: true
      description: Unique key ensuring idempotent handling of unsafe operations.
      schema:
        type: string
        maxLength: 128
    Page:
      name: page
      in: query
      required: false
      description: Page number to return. Defaults to 1.
      schema:
        type: integer
        minimum: 1
        default: 1
    PageSize:
      name: page_size
      in: query
      required: false
      description: Number of items per page. Defaults to 20.
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    ReturnId:
      name: return_id
      in: path
      required: true
      description: Identifier of the return.
      schema:
        type: string
    OrderId:
      name: order_id
      in: path
      required: true
      description: Identifier of the Walking Warehouse order.
      schema:
        type: string
  headers:
    XRequestId:
      description: Identifier correlating the request with logs and traces.
      schema:
        type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: >-
        JWT access token containing role claims. Supported roles: `1c`,
        `courier`, `admin`. See «00‑Core — Синхронизация документации», §2.6
        for canonical definitions.
security: []
